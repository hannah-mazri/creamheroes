{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","cat","className","src","id","alt","name","email","CardList","cats","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredCats","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEaA,EAAO,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAIG,GAA9B,0BACHC,IAAI,KAEN,6BAAKJ,EAAIK,OACT,4BAAIL,EAAIM,YCPDC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAKP,UAAU,YAAf,SACGO,EAAKC,KAAI,SAACT,GAAD,OACR,cAAC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIG,UCHRO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BDG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,KAAM,GACNU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,KAAMkB,S,oBAO3C,WACE,MAA8BC,KAAKN,MAA3Bb,EAAR,EAAQA,KAAMU,EAAd,EAAcA,YACRU,EAAepB,EAAKqB,QAAO,SAAC7B,GAAD,OAC/BA,EAAIK,KAAKyB,cAAcC,SAASb,EAAYY,kBAG9C,OACE,sBAAK7B,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAWU,YAAY,cAAcC,aAAce,KAAKf,eACxD,cAAC,EAAD,CAAUJ,KAAMoB,W,GA7BNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.69704035.chunk.js","sourcesContent":["import './card.styles.css';\r\n\r\nexport const Card = ({ cat }) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img\r\n        src={`https://robohash.org/${cat.id}?set=set4&size=180x180`}\r\n        alt=''\r\n      />\r\n      <h2>{cat.name}</h2>\r\n      <p>{cat.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = ({ cats }) => (\r\n  <div className='card-list'>\r\n    {cats.map((cat) => (\r\n      <Card key={cat.id} cat={cat}></Card>\r\n    ))}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className='search'\r\n      type='search'\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cats: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ cats: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { cats, searchField } = this.state;\n    const filteredCats = cats.filter((cat) =>\n      cat.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Robohash Cats</h1>\n        <SearchBox placeholder='Search cats' handleChange={this.handleChange} />\n        <CardList cats={filteredCats}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}